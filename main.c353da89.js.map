{"version":3,"sources":["scripts/main.js"],"names":["field","rows","columns","score","button","document","querySelector","scoreValue","startMessage","loseMessage","winMessage","restart","textContent","setNewNum","updateCells","x","y","cell","getElementById","value","classList","add","remove","isMoreMoves","hasEmptyCell","includes","Math","floor","random","randomNum","slideLeft","initialField","map","row","slide","isArraysEquals","slideRight","reverse","slideUp","slideDown","slidedRow","filterZeros","i","length","push","filter","num","arrayA","arrayB","j","addEventListener","replace","blur","ev","key"],"mappings":"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","file":"main.c353da89.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet field = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\n\nconst button = document.querySelector('.button');\nconst scoreValue = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nbutton.addEventListener('click', () => {\n  button.classList.replace('start', 'restart');\n  button.textContent = 'Restart';\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  startMessage.classList.add('hidden');\n  button.blur();\n  restart();\n});\n\nfunction restart() {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  scoreValue.textContent = '0';\n  score = 0;\n  setNewNum();\n  setNewNum();\n};\n\nfunction updateCells() {\n  for (let x = 0; x < rows; x++) {\n    for (let y = 0; y < columns; y++) {\n      const cell = document.getElementById(`${x}:${y}`);\n      const value = field[x][y];\n\n      cell.textContent = '';\n      cell.classList.value = 'field-cell';\n\n      if (value !== 0) {\n        cell.textContent = `${value}`;\n        cell.classList.add(`field-cell--${value}`);\n      }\n\n      if (value === 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n\n  if (!isMoreMoves()) {\n    loseMessage.classList.remove('hidden');\n  }\n};\n\nfunction isMoreMoves() {\n  if (hasEmptyCell()) {\n    return true;\n  }\n\n  for (let x = 0; x < rows; x++) {\n    for (let y = 0; y < columns; y++) {\n      if (field[x][y] === field[x][y + 1]) {\n        return true;\n      }\n    }\n  }\n\n  for (let x = 0; x < rows - 1; x++) {\n    for (let y = 0; y < columns; y++) {\n      if (field[x][y] === field[x + 1][y]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction hasEmptyCell() {\n  for (let x = 0; x < rows; x++) {\n    if (field[x].includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction setNewNum() {\n  while (hasEmptyCell()) {\n    const x = Math.floor(Math.random() * rows);\n    const y = Math.floor(Math.random() * columns);\n\n    if (field[x][y] === 0) {\n      const randomNum = Math.random() < 0.9 ? 2 : 4;\n\n      field[x][y] = randomNum;\n      updateCells();\n      break;\n    }\n  }\n}\n\ndocument.addEventListener('keydown', ev => {\n  switch (ev.key) {\n    case 'ArrowLeft':\n      slideLeft();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      break;\n  }\n\n  scoreValue.textContent = `${score}`;\n});\n\nfunction slideLeft() {\n  const initialField = field.map(row => [...row]);\n\n  for (let x = 0; x < rows; x++) {\n    let row = field[x];\n\n    row = slide(row);\n    field[x] = row;\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewNum();\n  }\n};\n\nfunction slideRight() {\n  const initialField = field.map(row => [...row]);\n\n  for (let x = 0; x < rows; x++) {\n    let row = field[x];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    field[x] = row;\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewNum();\n  }\n};\n\nfunction slideUp() {\n  const initialField = field.map(row => [...row]);\n\n  for (let y = 0; y < columns; y++) {\n    let row = [field[0][y], field[1][y], field[2][y], field[3][y]];\n\n    row = slide(row);\n    field[0][y] = row[0];\n    field[1][y] = row[1];\n    field[2][y] = row[2];\n    field[3][y] = row[3];\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewNum();\n  }\n}\n\nfunction slideDown() {\n  const initialField = field.map(row => [...row]);\n\n  for (let y = 0; y < columns; y++) {\n    let row = [field[0][y], field[1][y], field[2][y], field[3][y]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    field[0][y] = row[0];\n    field[1][y] = row[1];\n    field[2][y] = row[2];\n    field[3][y] = row[3];\n  }\n\n  if (!isArraysEquals(initialField, field)) {\n    setNewNum();\n  }\n}\n\nfunction slide(row) {\n  let slidedRow = filterZeros(row);\n\n  for (let i = 0; i < slidedRow.length - 1; i++) {\n    if (slidedRow[i] === slidedRow[i + 1]) {\n      slidedRow[i] *= 2;\n      slidedRow[i + 1] = 0;\n      score += slidedRow[i];\n    }\n  }\n\n  slidedRow = filterZeros(slidedRow);\n\n  while (slidedRow.length < rows) {\n    slidedRow.push(0);\n  }\n\n  return slidedRow;\n}\n\nfunction filterZeros(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction isArraysEquals(arrayA, arrayB) {\n  for (let i = 0; i < arrayA.length; i++) {\n    for (let j = 0; j < arrayA[i].length; j++) {\n      if (arrayA[i][j] !== arrayB[i][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"]}